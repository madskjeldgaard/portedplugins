CLASS:: Resonator
SUMMARY:: A resonant body simulation.
RELATED::HelpSource/Overview/PortedPlugins
CATEGORIES::UGens>PhysicalModelling

DESCRIPTION::
A resonant body simulation.

Original code by E. Gillet. Revisted by Ben Sergentanis for the LINK::https://github.com/electro-smith/DaisySP##DaisySP DSP library::. Ported to SuperCollider by Mads Kjeldgaard.


CLASSMETHODS::

METHOD::ar

argument::input
Audio input

argument::freq
Resonator frequency in herz

argument::position
Set at initialization.
Offset the phase of the amplitudes. 0.0 to 1.0.

argument::resolution
Set number of modes. Number between 1 and 24.
Set at initialization.

argument::structure
Changes overall character of the resonator. 0.0 to 1.0.

argument::brightness
Brightness of resonator. 0.0 to 1.0.

argument::damping
How long it takes the resonant body to decay. 0.0 to 1.0.

EXAMPLES::


code::

(
Ndef(\resonantsnare, { |pan=0|
	var trig = Impulse.kr(1);
	var snare = AnalogSnareDrum.ar(
		trig, decay: TRand.kr(0.1,0.5,trig) 
	);

	var sig = Resonator.ar(
		input: snare,
		freq: TExpRand.kr(25.0,250.0,trig), 
		position: 0.0, 
		resolution: 24, 
		structure: SinOsc.kr(0.01).unipolar, 
		brightness: SinOsc.kr(0.01, 0.5*pi).unipolar * 0.5, 
		damping: TRand.kr(0.2,0.8, trig)
	); 

	// Limiter
	sig = sig.tanh;

	Pan2.ar(sig, pan);
}).play;
)

(
SynthDef(\resonator, {|out=0, pan=0, dur = 1, sustain=0, trig=1, amp=0.5, freq=100, structure=0.5, position=0.005, brightness=0.5, damping=0.5| 
	var env = Env.perc.kr(gate: trig, timeScale:dur+sustain, doneAction: 2);
	var resolution = 24;
	var sig = Resonator.ar(PinkNoise.ar() * env, freq, position, resolution, structure, brightness, damping);

	sig = Pan2.ar(sig, pan);
	Out.ar(out, env*sig * amp)
}).add;
)
(
Pdef(':)', 
	Pbind(
		\instrument, \resonator,
		\out, 0.0,
		\pan, Pwhite(-1.0,1.0),
		\dur, Pseg([1,5], 16, \lin, inf ) * 0.125,
		\sustain, Pwhite(0,0.25) * Pkey(\dur),
		\degree, Pstutter(3, Pwhite(0,7)),
		\octave, Pwhite(3,5),
		\structure, Pwhite(0.25,0.5),
		\brightness, Pwhite(0,0.25),
		\damping, Pwhite(0.25, 0.75),
	)
).play
)
::

