CLASS:: AnalogChew
SUMMARY:: Analog tape chew emulation
RELATED::HelpSource/Overview/PortedPlugins
CATEGORIES::UGens>VirtualAnalog

DESCRIPTION::

This plugin is an analog tape chew emulation algorithm by Jatin Chowdhury, a mini version of the mindblowing link::https://github.com/jatinchowdhury18/AnalogTapeModel vst plugin::. For a deep dive, link::https://ccrma.stanford.edu/~jatin/420/tape/TapeModel_DAFx.pdf##see Chowdhury's paper on analog tape modelling::. 
This smaller version is mostly useful as a tape chew.

CLASSMETHODS::

METHOD::ar

ARGUMENT::input
Audio input

ARGUMENT::depth
Depth controls how deep the tape is chewed. 0.0 to 1.0.

ARGUMENT::frequency
Frequency controls how much space there is between bits of tape that have been chewed up. Useful to toggle randomly between 0 and 1.

ARGUMENT::variance
Variance determines how much randomness there is in determining the amount of space between chewed up sections.  0.0 to 1.0.


EXAMPLES::

code::
s.boot // Boot the server

b = Buffer.read(s, Platform.resourceDir +/+ "sounds/a11wlk01.wav");

// move the mouse between the left and right to hear the differences
// between no effect (left) and effected (right)
(
SynthDef(\chew, {| out = 0, bufnum = 0 |
	var snd=PlayBuf.ar(1, bufnum, BufRateScale.kr(bufnum),loop:1);
	var freq=LFTri.kr(1/3,Rand(0,2),0.5,0.5);
	var depth=LFTri.kr(1/4,Rand(0,2),0.5,0.5);
	var variance=LFTri.kr(1/5,Rand(0,2),0.5,0.5);
	snd=SelectX.ar(MouseX.kr(),[
		snd,
		AnalogChew.ar(snd,depth,freq,variance);
	]);
	Out.ar(out,snd!2);
}).play(s, [\out, 0, \bufnum, b]);
::

