CLASS:: AnalogDegrade
SUMMARY:: Analog tape emulation
RELATED::HelpSource/Overview/PortedPlugins
CATEGORIES::UGens>VirtualAnalog

DESCRIPTION::

This plugin is an analog tape degradation emulation algorithm by Jatin Chowdhury, a mini version of the mindblowing link::https://github.com/jatinchowdhury18/AnalogTapeModel vst plugin::. For a deep dive, link::https://ccrma.stanford.edu/~jatin/420/tape/TapeModel_DAFx.pdf##see Chowdhury's paper on analog tape modelling::. 
This smaller version is mostly useful as a tape degradation.

CLASSMETHODS::

METHOD::ar

ARGUMENT::input
Audio input

ARGUMENT::depth
Depth controls the intensity of the wear on the tape. 0.0 to 1.0.

ARGUMENT::amount
Amount controls the amount of wear, typically corresponding to the age of the tape. 0.0 to 1.0.

ARGUMENT::variance
Variance adds a time-varying randomness to the degradatation. 0.0 to 1.0.

ARGUMENT::envelope
Envelope applies an amplitude envelope to the tape noise. 0.0 to 1.0.

EXAMPLES::

code::
s.boot // Boot the server

b = Buffer.read(s, Platform.resourceDir +/+ "sounds/a11wlk01.wav");

// move the mouse between the left and right to hear the differences
// between no effect (left) and effected (right)
(
SynthDef(\chew, {| out = 0, bufnum = 0 |
	var snd=PlayBuf.ar(1, bufnum, BufRateScale.kr(bufnum),loop:1);
	var depth=LFTri.kr(1/5,Rand(0,2),0.25,0.5);
	var amount=LFTri.kr(1/2,Rand(0,2),0.25,0.5);
	var variance=LFTri.kr(1/3,Rand(0,2),0.25,0.5);
	var envelope=LFTri.kr(1/4,Rand(0,2),0.25,0.5);
	snd=SelectX.ar(MouseX.kr(),[
		snd,
		AnalogDegrade.ar(snd,depth,amount,variance,envelope);
	]);
	Out.ar(out,snd!2);
}).play(s, [\out, 0, \bufnum, b]);
)
::

